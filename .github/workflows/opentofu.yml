name: 'OpenTofu'

on:
  pull_request:
    paths:
      - 'terraform/**'
    branches:
      - master

permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: write

jobs:
  plan:
    name: 'OpenTofu Plan'
    runs-on: ubuntu-latest
    outputs:
      plan_hash: ${{ steps.plan.outputs.plan_hash }}
      plan_key: ${{ steps.plan.outputs.plan_key }}

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: ~1.6

    - name: Setup Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Configure AWS CLI for S3 backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LINODE_S3_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LINODE_S3_SECRET_KEY }}
      run: |
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV

    - name: OpenTofu Init
      id: init
      run: tofu init

    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color

    - name: Setup Linode CLI
      uses: linode/action-linode-cli@v1
      with:
        token: ${{ secrets.LINODE_TOKEN }}

    - name: OpenTofu Plan
      id: plan
      run: |
        tofu plan -no-color -input=false -out=tfplan
        tofu show -no-color tfplan > plan-raw.txt
        
        # Post-process plan output to fix diff highlighting
        sed -E 's/^(\s+)(\+|\-|\~)/\2\1/' plan-raw.txt > plan-output.txt
        
        # Generate checksum and upload plan to Object Storage
        PLAN_HASH=$(sha256sum tfplan | cut -d' ' -f1)
        PLAN_KEY="plans/${GITHUB_SHA}-${GITHUB_RUN_ID}.tfplan"
        
        linode-cli obj put tfplan andyleap-dev-tf/$PLAN_KEY
        
        echo "plan_hash=$PLAN_HASH" >> $GITHUB_OUTPUT
        echo "plan_key=$PLAN_KEY" >> $GITHUB_OUTPUT
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true


    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const planOutput = fs.readFileSync('./terraform/plan-output.txt', 'utf8');
          
          const output = `#### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`diff\n
          ${planOutput}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: OpenTofu Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

  apply:
    name: 'OpenTofu Apply'
    runs-on: ubuntu-latest
    environment: terraform
    needs: plan
    if: needs.plan.result == 'success'

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: ~1.6

    - name: Setup Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Configure AWS CLI for S3 backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LINODE_S3_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LINODE_S3_SECRET_KEY }}
      run: |
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV

    - name: Setup Linode CLI
      uses: linode/action-linode-cli@v1
      with:
        token: ${{ secrets.LINODE_TOKEN }}

    - name: OpenTofu Init
      run: tofu init

    - name: Download and Verify Plan
      run: |
        # Download plan from Object Storage
        PLAN_KEY="plans/${GITHUB_SHA}-${{ github.run_id }}.tfplan"
        linode-cli obj get andyleap-dev-tf $PLAN_KEY --file tfplan
        
        # Verify checksum
        DOWNLOADED_HASH=$(sha256sum tfplan | cut -d' ' -f1)
        EXPECTED_HASH="${{ needs.plan.outputs.plan_hash }}"
        
        if [ "$DOWNLOADED_HASH" != "$EXPECTED_HASH" ]; then
          echo "‚ùå Plan checksum mismatch!"
          echo "Expected: $EXPECTED_HASH"
          echo "Downloaded: $DOWNLOADED_HASH"
          exit 1
        fi
        
        echo "‚úÖ Plan checksum verified: $DOWNLOADED_HASH"

    - name: OpenTofu Apply
      run: tofu apply -auto-approve -input=false tfplan
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}