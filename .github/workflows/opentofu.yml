name: 'OpenTofu'

on:
  pull_request:
    paths:
      - 'terraform/**'
    branches:
      - master

permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: write
  secrets: write

jobs:
  opentofu:
    name: 'OpenTofu Plan and Apply'
    runs-on: ubuntu-latest
    environment: terraform

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: ~1.6

    - name: Setup Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Configure AWS CLI for S3 backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LINODE_S3_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LINODE_S3_SECRET_KEY }}
      run: |
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV

    - name: OpenTofu Init
      id: init
      run: tofu init

    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color

    - name: OpenTofu Plan
      id: plan
      run: |
        tofu plan -no-color -input=false -out=tfplan
        tofu show -no-color tfplan > plan-output.txt
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Upload Plan Artifact
      if: steps.plan.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: ./terraform/tfplan
        retention-days: 5

    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const planOutput = fs.readFileSync('./terraform/plan-output.txt', 'utf8');
          
          const output = `#### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`hcl\n
          ${planOutput}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: OpenTofu Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Download Plan Artifact
      if: steps.plan.outcome == 'success'
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: ./terraform/

    - name: OpenTofu Apply
      if: steps.plan.outcome == 'success'
      run: tofu apply -auto-approve -input=false tfplan
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}